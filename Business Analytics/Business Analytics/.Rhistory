}
}
# Assigning Trend Function
isHome <- FALSE
if (isHome == FALSE) {
home = 4
homeTrend = 6
} else {
home = 5
homeTrend = 7
}
for (train in 1:nrow(train_edit)) {
# 4 for Away, 5 for Home
if (train_edit[train, home] == 'ORL') {
# Check if train_edit is greater/equal to trend_test and less than the next trend_test
for (trend in 1:nrow(trend_team)) {
if (train_edit[train, 3] >= trend_team[trend, 1]) {
if (!is.na(train_edit[train, 3] < trend_team[(trend+1), 1])) {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
} else {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
}
}
}
}
}
# Team CSV Here
trend_team <- read_delim("C:/Users/my_ma/Documents/NBA-Hackathon/Business Analytics/Business Analytics/Google Trends/multiTimeline Pheonix Suns.csv",
";", escape_double = FALSE, col_types = cols(Week = col_date(format = "%Y-%m-%d")),
trim_ws = TRUE)
# Assigning Trend Function
isHome <- FALSE
if (isHome == FALSE) {
home = 4
homeTrend = 6
} else {
home = 5
homeTrend = 7
}
for (train in 1:nrow(train_edit)) {
# 4 for Away, 5 for Home
if (train_edit[train, home] == 'PHX') {
# Check if train_edit is greater/equal to trend_test and less than the next trend_test
for (trend in 1:nrow(trend_team)) {
if (train_edit[train, 3] >= trend_team[trend, 1]) {
if (!is.na(train_edit[train, 3] < trend_team[(trend+1), 1])) {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
} else {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
}
}
}
}
}
# Assigning Trend Function
isHome <- TRUE
if (isHome == FALSE) {
home = 4
homeTrend = 6
} else {
home = 5
homeTrend = 7
}
for (train in 1:nrow(train_edit)) {
# 4 for Away, 5 for Home
if (train_edit[train, home] == 'PHX') {
# Check if train_edit is greater/equal to trend_test and less than the next trend_test
for (trend in 1:nrow(trend_team)) {
if (train_edit[train, 3] >= trend_team[trend, 1]) {
if (!is.na(train_edit[train, 3] < trend_team[(trend+1), 1])) {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
} else {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
}
}
}
}
}
# Team CSV Here
trend_team <- read_delim("C:/Users/my_ma/Documents/NBA-Hackathon/Business Analytics/Business Analytics/Google Trends/multiTimeline Philadelphia 76ers.csv",
";", escape_double = FALSE, col_types = cols(Week = col_date(format = "%Y-%m-%d")),
trim_ws = TRUE)
# Assigning Trend Function
isHome <- TRUE
if (isHome == FALSE) {
home = 4
homeTrend = 6
} else {
home = 5
homeTrend = 7
}
for (train in 1:nrow(train_edit)) {
# 4 for Away, 5 for Home
if (train_edit[train, home] == 'PHI') {
# Check if train_edit is greater/equal to trend_test and less than the next trend_test
for (trend in 1:nrow(trend_team)) {
if (train_edit[train, 3] >= trend_team[trend, 1]) {
if (!is.na(train_edit[train, 3] < trend_team[(trend+1), 1])) {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
} else {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
}
}
}
}
}
# Assigning Trend Function
isHome <- FALSE
if (isHome == FALSE) {
home = 4
homeTrend = 6
} else {
home = 5
homeTrend = 7
}
for (train in 1:nrow(train_edit)) {
# 4 for Away, 5 for Home
if (train_edit[train, home] == 'PHI') {
# Check if train_edit is greater/equal to trend_test and less than the next trend_test
for (trend in 1:nrow(trend_team)) {
if (train_edit[train, 3] >= trend_team[trend, 1]) {
if (!is.na(train_edit[train, 3] < trend_team[(trend+1), 1])) {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
} else {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
}
}
}
}
}
# Team CSV Here
trend_team <- read_delim("C:/Users/my_ma/Documents/NBA-Hackathon/Business Analytics/Business Analytics/Google Trends/multiTimeline Portland Train Blazers.csv",
";", escape_double = FALSE, col_types = cols(Week = col_date(format = "%Y-%m-%d")),
trim_ws = TRUE)
# Assigning Trend Function
isHome <- FALSE
if (isHome == FALSE) {
home = 4
homeTrend = 6
} else {
home = 5
homeTrend = 7
}
for (train in 1:nrow(train_edit)) {
# 4 for Away, 5 for Home
if (train_edit[train, home] == 'POR') {
# Check if train_edit is greater/equal to trend_test and less than the next trend_test
for (trend in 1:nrow(trend_team)) {
if (train_edit[train, 3] >= trend_team[trend, 1]) {
if (!is.na(train_edit[train, 3] < trend_team[(trend+1), 1])) {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
} else {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
}
}
}
}
}
# Assigning Trend Function
isHome <- TRUE
if (isHome == FALSE) {
home = 4
homeTrend = 6
} else {
home = 5
homeTrend = 7
}
for (train in 1:nrow(train_edit)) {
# 4 for Away, 5 for Home
if (train_edit[train, home] == 'POR') {
# Check if train_edit is greater/equal to trend_test and less than the next trend_test
for (trend in 1:nrow(trend_team)) {
if (train_edit[train, 3] >= trend_team[trend, 1]) {
if (!is.na(train_edit[train, 3] < trend_team[(trend+1), 1])) {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
} else {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
}
}
}
}
}
# Team CSV Here
trend_team <- read_delim("C:/Users/my_ma/Documents/NBA-Hackathon/Business Analytics/Business Analytics/Google Trends/multiTimeline Sacremento Kings.csv",
";", escape_double = FALSE, col_types = cols(Week = col_date(format = "%Y-%m-%d")),
trim_ws = TRUE)
# Assigning Trend Function
isHome <- TRUE
if (isHome == FALSE) {
home = 4
homeTrend = 6
} else {
home = 5
homeTrend = 7
}
for (train in 1:nrow(train_edit)) {
# 4 for Away, 5 for Home
if (train_edit[train, home] == 'SAC') {
# Check if train_edit is greater/equal to trend_test and less than the next trend_test
for (trend in 1:nrow(trend_team)) {
if (train_edit[train, 3] >= trend_team[trend, 1]) {
if (!is.na(train_edit[train, 3] < trend_team[(trend+1), 1])) {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
} else {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
}
}
}
}
}
# Assigning Trend Function
isHome <- FALSE
if (isHome == FALSE) {
home = 4
homeTrend = 6
} else {
home = 5
homeTrend = 7
}
for (train in 1:nrow(train_edit)) {
# 4 for Away, 5 for Home
if (train_edit[train, home] == 'SAC') {
# Check if train_edit is greater/equal to trend_test and less than the next trend_test
for (trend in 1:nrow(trend_team)) {
if (train_edit[train, 3] >= trend_team[trend, 1]) {
if (!is.na(train_edit[train, 3] < trend_team[(trend+1), 1])) {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
} else {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
}
}
}
}
}
# Team CSV Here
trend_team <- read_delim("C:/Users/my_ma/Documents/NBA-Hackathon/Business Analytics/Business Analytics/Google Trends/multiTimeline San Antonio Spurs.csv",
";", escape_double = FALSE, col_types = cols(Week = col_date(format = "%Y-%m-%d")),
trim_ws = TRUE)
# Assigning Trend Function
isHome <- FALSE
if (isHome == FALSE) {
home = 4
homeTrend = 6
} else {
home = 5
homeTrend = 7
}
for (train in 1:nrow(train_edit)) {
# 4 for Away, 5 for Home
if (train_edit[train, home] == 'SAS') {
# Check if train_edit is greater/equal to trend_test and less than the next trend_test
for (trend in 1:nrow(trend_team)) {
if (train_edit[train, 3] >= trend_team[trend, 1]) {
if (!is.na(train_edit[train, 3] < trend_team[(trend+1), 1])) {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
} else {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
}
}
}
}
}
# Assigning Trend Function
isHome <- TRUE
if (isHome == FALSE) {
home = 4
homeTrend = 6
} else {
home = 5
homeTrend = 7
}
for (train in 1:nrow(train_edit)) {
# 4 for Away, 5 for Home
if (train_edit[train, home] == 'SAS') {
# Check if train_edit is greater/equal to trend_test and less than the next trend_test
for (trend in 1:nrow(trend_team)) {
if (train_edit[train, 3] >= trend_team[trend, 1]) {
if (!is.na(train_edit[train, 3] < trend_team[(trend+1), 1])) {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
} else {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
}
}
}
}
}
# Team CSV Here
trend_team <- read_delim("C:/Users/my_ma/Documents/NBA-Hackathon/Business Analytics/Business Analytics/Google Trends/multiTimeline Toronto Raptors.csv",
";", escape_double = FALSE, col_types = cols(Week = col_date(format = "%Y-%m-%d")),
trim_ws = TRUE)
# Assigning Trend Function
isHome <- TRUE
if (isHome == FALSE) {
home = 4
homeTrend = 6
} else {
home = 5
homeTrend = 7
}
for (train in 1:nrow(train_edit)) {
# 4 for Away, 5 for Home
if (train_edit[train, home] == 'TOR') {
# Check if train_edit is greater/equal to trend_test and less than the next trend_test
for (trend in 1:nrow(trend_team)) {
if (train_edit[train, 3] >= trend_team[trend, 1]) {
if (!is.na(train_edit[train, 3] < trend_team[(trend+1), 1])) {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
} else {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
}
}
}
}
}
# Assigning Trend Function
isHome <- FALSE
if (isHome == FALSE) {
home = 4
homeTrend = 6
} else {
home = 5
homeTrend = 7
}
for (train in 1:nrow(train_edit)) {
# 4 for Away, 5 for Home
if (train_edit[train, home] == 'TOR') {
# Check if train_edit is greater/equal to trend_test and less than the next trend_test
for (trend in 1:nrow(trend_team)) {
if (train_edit[train, 3] >= trend_team[trend, 1]) {
if (!is.na(train_edit[train, 3] < trend_team[(trend+1), 1])) {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
} else {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
}
}
}
}
}
# Team CSV Here
trend_team <- read_delim("C:/Users/my_ma/Documents/NBA-Hackathon/Business Analytics/Business Analytics/Google Trends/multiTimeline Utah Jazz.csv",
";", escape_double = FALSE, col_types = cols(Week = col_date(format = "%Y-%m-%d")),
trim_ws = TRUE)
# Assigning Trend Function
isHome <- FALSE
if (isHome == FALSE) {
home = 4
homeTrend = 6
} else {
home = 5
homeTrend = 7
}
for (train in 1:nrow(train_edit)) {
# 4 for Away, 5 for Home
if (train_edit[train, home] == 'UTA') {
# Check if train_edit is greater/equal to trend_test and less than the next trend_test
for (trend in 1:nrow(trend_team)) {
if (train_edit[train, 3] >= trend_team[trend, 1]) {
if (!is.na(train_edit[train, 3] < trend_team[(trend+1), 1])) {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
} else {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
}
}
}
}
}
# Assigning Trend Function
isHome <- TRUE
if (isHome == FALSE) {
home = 4
homeTrend = 6
} else {
home = 5
homeTrend = 7
}
for (train in 1:nrow(train_edit)) {
# 4 for Away, 5 for Home
if (train_edit[train, home] == 'UTA') {
# Check if train_edit is greater/equal to trend_test and less than the next trend_test
for (trend in 1:nrow(trend_team)) {
if (train_edit[train, 3] >= trend_team[trend, 1]) {
if (!is.na(train_edit[train, 3] < trend_team[(trend+1), 1])) {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
} else {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
}
}
}
}
}
# Team CSV Here
trend_team <- read_delim("C:/Users/my_ma/Documents/NBA-Hackathon/Business Analytics/Business Analytics/Google Trends/multiTimeline Washington Wizards.csv",
";", escape_double = FALSE, col_types = cols(Week = col_date(format = "%Y-%m-%d")),
trim_ws = TRUE)
# Assigning Trend Function
isHome <- TRUE
if (isHome == FALSE) {
home = 4
homeTrend = 6
} else {
home = 5
homeTrend = 7
}
for (train in 1:nrow(train_edit)) {
# 4 for Away, 5 for Home
if (train_edit[train, home] == 'WAS') {
# Check if train_edit is greater/equal to trend_test and less than the next trend_test
for (trend in 1:nrow(trend_team)) {
if (train_edit[train, 3] >= trend_team[trend, 1]) {
if (!is.na(train_edit[train, 3] < trend_team[(trend+1), 1])) {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
} else {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
}
}
}
}
}
# Assigning Trend Function
isHome <- FALSE
if (isHome == FALSE) {
home = 4
homeTrend = 6
} else {
home = 5
homeTrend = 7
}
for (train in 1:nrow(train_edit)) {
# 4 for Away, 5 for Home
if (train_edit[train, home] == 'WAS') {
# Check if train_edit is greater/equal to trend_test and less than the next trend_test
for (trend in 1:nrow(trend_team)) {
if (train_edit[train, 3] >= trend_team[trend, 1]) {
if (!is.na(train_edit[train, 3] < trend_team[(trend+1), 1])) {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
} else {
# 6 for Away, 7 for Home
value <- trend_team[trend,2]
train_edit[train, homeTrend] <- value
}
}
}
}
}
write.csv('train_edit', sep=',')
write.csv(train_edit, sep=',', "train_edit.csv")
